<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.above.dao.ClassInfoMapper">
    <sql id="myBaseSql">
        cla.id,cla.school_id schoolId,cla.department_id departmentId,cla.class_name className,
        di.department_name departmentName, si.school_name schoolName
    </sql>

<!--  获取班级列表映射辅导员列表和班主任列表-->
    <resultMap id="ClassMap" type="com.above.dto.ClassInfoDto" >
        <collection property="classLeader" column="{classId=cla.id}" javaType="ArrayList"
                    ofType="com.above.po.ClassTeacherRelation" select="getClassLeaderList"/>
        <collection property="classTeacher" column="{classId=cla.id}" javaType="ArrayList"
                    ofType="com.above.po.ClassTeacherRelation" select="getClassTeacherList"/>
    </resultMap>

    <sql id="ClassInfo">
        cla.id,
        cla.school_id,
        cla.department_id,
        cla.major_id,
        cla.grade_id,
        cla.class_name,
        cla.create_by,
        cla.create_datetime,
        cla.update_by,
        cla.update_datetime
    </sql>

    <sql id="baseLeftJoinField">
        sc.school_name as schoolName,
        de.department_name as departmentName,
        ma.major_name as majorName,
        gr.grade_year as gradeYear
    </sql>
    <sql id="baseLeftJoin">
        LEFT JOIN school_info AS sc ON cla.school_id = sc.id
        LEFT JOIN department_info de ON cla.department_id = de.id
        LEFT JOIN major_info AS ma ON cla.major_id = ma.id
        LEFT JOIN grade_info AS gr ON cla.grade_id = gr.id
    </sql>

    <select id="getClassListWithOther" resultMap="ClassMap" resultType="com.above.dto.ClassInfoDto">
        SELECT
            <include refid="ClassInfo"/>,
               <include refid="baseLeftJoinField"/>
        FROM
            class_info AS cla
            <include refid="baseLeftJoin"/>
        <where>
            cla.deleted =0
            <if test="schoolId != null">
                AND cla.school_id= #{schoolId}
            </if>
            <if test="departmentId != null">
                AND cla.department_id= #{departmentId}
            </if>
            <if test="classId != null">
                AND cla.id= #{classId}
            </if>
            <if test="schoolIdList != null and schoolIdList.size()>0">
                AND cla.school_id IN
                <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="departmentIdList != null and departmentIdList.size()>0">
                AND cla.department_id IN
                <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="classIdList != null and classIdList.size()>0">
                AND cla.id IN
                <foreach collection="classIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="key != null">
                AND cla.class_name like  CONCAT('%',#{key},'%')
            </if>
            <if test="majorId != null and majorId > 0">
                AND cla.major_id = #{majorId}
            </if>
            <if test="gradeId != null and gradeId > 0">
                AND cla.grade_id = #{gradeId}
            </if>
        </where>
        ORDER BY cla.id ASC
        limit #{start},#{size}
    </select>
    <select id="getClassInfoDtoList" resultType="com.above.bean.theory.ClassInfoDto">
        SELECT
        <include refid="myBaseSql"/>
        FROM `class_info` cla
        LEFT JOIN department_info di ON di.id = cla.department_id AND cla.deleted = 0
        LEFT JOIN school_info si ON si.id = cla.school_id AND cla.deleted = 0
        WHERE cla.deleted = 0
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        class_info AS c
        LEFT JOIN school_info AS sc ON c.school_id = sc.id
        LEFT JOIN department_info AS d ON c.department_id = d.id
        WHERE
        c.deleted =0
        <if test="schoolId != null">
            AND c.school_id= #{schoolId}
        </if>
        <if test="departmentId != null">
            AND c.department_id= #{departmentId}
        </if>
        <if test="classId != null">
            AND c.id= #{classId}
        </if>
        <if test="schoolIdList != null and schoolIdList.size()>0">
            AND c.school_id IN
            <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="departmentIdList != null and departmentIdList.size()>0">
            AND c.department_id IN
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="classIdList != null and classIdList.size()>0">
            AND c.id IN
            <foreach collection="classIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="key != null">
            AND c.class_name like  CONCAT('%',#{key},'%')
        </if>
    </select>
    <select id="getClassListWithOtherCount" resultType="java.lang.Integer">
        SELECT
         COUNT(cla.id)
        FROM
        class_info AS cla
        <include refid="baseLeftJoin"/>
        <where>
            cla.deleted =0
            <if test="schoolId != null">
                AND cla.school_id= #{schoolId}
            </if>
            <if test="departmentId != null">
                AND cla.department_id= #{departmentId}
            </if>
            <if test="classId != null">
                AND cla.id= #{classId}
            </if>
            <if test="schoolIdList != null and schoolIdList.size()>0">
                AND cla.school_id IN
                <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="departmentIdList != null and departmentIdList.size()>0">
                AND cla.department_id IN
                <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="classIdList != null and classIdList.size()>0">
                AND cla.id IN
                <foreach collection="classIdList" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="key != null">
                AND cla.class_name like  CONCAT('%',#{key},'%')
            </if>
            <if test="majorId != null and majorId > 0">
                AND cla.major_id = #{majorId}
            </if>
            <if test="gradeId != null and gradeId > 0">
                AND cla.grade_id = #{gradeId}
            </if>
        </where>
    </select>
    <select id="getClassTeacherList" resultType="com.above.po.ClassTeacherRelation">
        select
            ctr.id,
            ctr.class_id,
            ctr.teacher_id,
            ctr.relation_type,
            ctr.create_by,
            ctr.create_by,
            ctr.teacher_name,
            ctr.update_by,
            ctr.update_datetime
        from class_teacher_relation as ctr
        <where>

            ctr.relation_type = 2

            <if test="classId != null">
                AND ctr.class_id = #{classId}
            </if>
        </where>
    </select>
    <select id="getClassLeaderList" resultType="com.above.po.ClassTeacherRelation">
        select
        ctr.id,
        ctr.class_id,
        ctr.teacher_id,
        ctr.relation_type,
        ctr.create_by,
        ctr.create_by,
        ctr.teacher_name,
        ctr.update_by,
        ctr.update_datetime
        from class_teacher_relation as ctr
        <where>

            ctr.relation_type = 1

            <if test="classId != null">
                AND ctr.class_id = #{classId}
            </if>
        </where>
    </select>
</mapper>
