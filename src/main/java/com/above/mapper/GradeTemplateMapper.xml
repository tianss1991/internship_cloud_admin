<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.above.dao.GradeTemplateMapper">

    <sql id="gradeInfo">
        id,pid,plan_id,content,score,create_by,create_datetime,update_by,update_datetime
    </sql>

    <resultMap id="GradePidMap" type="com.above.dto.GradeTemplateDto" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="pid" property="pid" jdbcType="INTEGER" />
        <result column="plan_id" property="planId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="score" property="score" jdbcType="VARCHAR" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="create_datetime" property="createDatetime" jdbcType="DATE" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
        <result column="update_datetime" property="updateDatetime" jdbcType="DATE" />
        <collection property="children" column="id" javaType="ArrayList"
                    ofType="com.above.dto.GradeTemplateDto" select="getGradeChildrenById"/>
    </resultMap>

    <resultMap id="GradeChildrenMap" type="com.above.dto.GradeTemplateDto">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="pid" property="pid" jdbcType="INTEGER" />
        <result column="plan_id" property="planId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="score" property="score" jdbcType="VARCHAR" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="create_datetime" property="createDatetime" jdbcType="DATE" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
        <result column="update_datetime" property="updateDatetime" jdbcType="DATE" />
        <collection property="children" column="id" javaType="ArrayList"
                    ofType="com.above.dto.GradeTemplateDto" select="getGradeChildrenById"/>
    </resultMap>

    <select id="getGradePidById" resultMap="GradePidMap" parameterType="com.above.vo.BaseVo" >
        select
            <include refid="gradeInfo"/>
        from
            grade_template
        where
            plan_id = #{planId}
            and pid is null
    </select>

    <select id="getGradeChildrenById" resultMap="GradeChildrenMap" parameterType="java.lang.Integer" >
        select
            <include refid="gradeInfo"/>
        from
             grade_template
        where
              pid = #{id}
    </select>
    <select id="getPlanWithGradeList" resultType="com.above.dto.PlanWithOther">
        SELECT
        ipi.id AS id,
        ipi.plan_title AS planTitle,
        si.school_name AS schoolName,
        di.department_name AS departmentName,
        gi.grade_year AS gradeYear,
        mi.major_name AS majorName,
        ipi.major_id as majorId,
        ipi.school_id as schoolId,
        ipi.department_id as departmentId,
        ipi.grade_id as gradeId,
        GROUP_CONCAT(gt.content,"(",gt.score,")") as gradePerformance

        FROM
        (select plan_id,content ,score From grade_template  WHERE pid is null and plan_id is not null) gt
        LEFT JOIN internship_plan_info ipi on gt.plan_id = ipi.id and ipi.deleted = 0
        LEFT JOIN major_info mi ON ipi.major_id = mi.id
        AND mi.deleted = 0
        LEFT JOIN grade_info gi ON gi.id = ipi.grade_id
        AND gi.deleted = 0
        LEFT JOIN school_info si ON si.id = ipi.school_id 	AND si.deleted = 0
        LEFT JOIN department_info di ON di.id = ipi.department_id  	AND di.deleted = 0
        WHERE
        ipi.deleted = 0
        <if test="schoolId != null and schoolId > 0">
            ipi.school_id = #{schoolId}
        </if>
        <if test="schoolIdList != null and schoolIdList.size()>0">
            AND ipi.school_id IN
            <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="departmentId != null and departmentId > 0">
            ipi.department_id = #{departmentId}
        </if>
        <if test="departmentIdList != null and departmentIdList.size()>0">
            AND ipi.department_id IN
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="majorId != null and majorId > 0">
            ipi.major_id = #{majorId}
        </if>
        <if test="gradeId != null and gradeId > 0">
            ipi.grade_id = #{gradeId}
        </if>
        <if test="key != null and key != ''">
            ipi.student_name like concat('%',#{key},'%')
        </if>
        limit #{start},#{size}
    </select>
    <select id="getPlanWithGradeTotalCount" resultType="java.lang.Integer">
        SELECT
            count(ipi.id)
        FROM
        internship_plan_info ipi
        WHERE
        ipi.deleted = 0
        <if test="schoolId != null and schoolId > 0">
            ipi.school_id = #{schoolId}
        </if>
        <if test="schoolIdList != null and schoolIdList.size()>0">
            AND ipi.school_id IN
            <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="departmentId != null and departmentId > 0">
            ipi.department_id = #{departmentId}
        </if>
        <if test="departmentIdList != null and departmentIdList.size()>0">
            AND ipi.department_id IN
            <foreach collection="departmentIdList" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="majorId != null and majorId > 0">
            ipi.major_id = #{majorId}
        </if>
        <if test="gradeId != null and gradeId > 0">
            ipi.grade_id = #{gradeId}
        </if>
        <if test="key != null and key != ''">
            ipi.student_name like concat('%',#{key},'%')
        </if>
    </select>


</mapper>
